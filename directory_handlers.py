from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup, ReplyKeyboardMarkup
from telegram.constants import ParseMode
from telegram.ext import CallbackContext
from utils import load_directory_data
async def directory_menu(update: Update, context: CallbackContext) -> None:
    """–ü–æ–∫–∞–∑—É—î –≥–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é –¥–æ–≤—ñ–¥–Ω–∏–∫–∞."""
    if update.callback_query:
        await update.callback_query.answer()
    data = await load_directory_data()
    if not data:
        if update.message:
            await update.message.reply_text("–ü–æ–º–∏–ª–∫–∞: –ù–µ –≤–¥–∞–ª–æ—Å—è –∑–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ –¥–∞–Ω—ñ –¥–æ–≤—ñ–¥–Ω–∏–∫–∞.")
        return
    keyboard = []
    for category_name in data.keys():
        keyboard.append([InlineKeyboardButton(category_name, callback_data=f"dir_cat:{category_name}")])
    keyboard.append([InlineKeyboardButton("üîô –ù–∞–∑–∞–¥ –¥–æ –≥–æ–ª–æ–≤–Ω–æ–≥–æ –º–µ–Ω—é", callback_data="main_menu")])
    reply_markup = InlineKeyboardMarkup(keyboard)
    if update.message:
        await update.message.reply_text("–û–±–µ—Ä—ñ—Ç—å –∫–∞—Ç–µ–≥–æ—Ä—ñ—é:", reply_markup=reply_markup)
    elif update.callback_query:
        await update.callback_query.edit_message_text("–û–±–µ—Ä—ñ—Ç—å –∫–∞—Ç–µ–≥–æ—Ä—ñ—é:", reply_markup=reply_markup)
async def directory_show_items(update: Update, context: CallbackContext) -> None:
    """–ü–æ–∫–∞–∑—É—î —Å–ø–∏—Å–æ–∫ –µ–ª–µ–º–µ–Ω—Ç—ñ–≤ —É –≤–∏–±—Ä–∞–Ω—ñ–π –∫–∞—Ç–µ–≥–æ—Ä—ñ—ó."""
    query = update.callback_query
    await query.answer()
    _, category_name = query.data.split(':')
    data = await load_directory_data()
    items = data.get(category_name, {})
    if not items:
        await query.edit_message_text("–í —Ü—ñ–π –∫–∞—Ç–µ–≥–æ—Ä—ñ—ó –Ω–µ–º–∞—î –¥–∞–Ω–∏—Ö.", reply_markup=InlineKeyboardMarkup([[InlineKeyboardButton("üîô –ù–∞–∑–∞–¥", callback_data="dir_menu")]]))
        return
    keyboard = []
    for item_id, item_data in items.items():
        button_text = item_data.get("–Ω–∞–∑–≤–∞", "–ë–µ–∑ –Ω–∞–∑–≤–∏")
        keyboard.append([InlineKeyboardButton(button_text, callback_data=f"dir_item:{category_name}:{item_id}")])
    keyboard.append([InlineKeyboardButton("üîô –ù–∞–∑–∞–¥", callback_data="dir_menu")])
    reply_markup = InlineKeyboardMarkup(keyboard)
    await query.edit_message_text(f"--- **{category_name}** ---", reply_markup=reply_markup, parse_mode=ParseMode.MARKDOWN)
async def directory_show_item_details(update: Update, context: CallbackContext) -> None:
    """–ü–æ–∫–∞–∑—É—î –¥–µ—Ç–∞–ª—ñ –≤–∏–±—Ä–∞–Ω–æ–≥–æ –µ–ª–µ–º–µ–Ω—Ç–∞."""
    query = update.callback_query
    await query.answer()
    _, category_name, item_id = query.data.split(':')
    data = await load_directory_data()
    item_data = data.get(category_name, {}).get(item_id, {})
    if not item_data:
        await query.edit_message_text("–ü–æ–º–∏–ª–∫–∞: –î–∞–Ω—ñ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ.")
        return
    text = f"**{item_data.get('–Ω–∞–∑–≤–∞', '–ù–µ–≤—ñ–¥–æ–º–æ')}**\n\n"
    if item_data.get("–∞–¥—Ä–µ—Å–∞"):
        text += f"üìç **–ê–¥—Ä–µ—Å–∞:** {item_data['–∞–¥—Ä–µ—Å–∞']}\n"
    if item_data.get("–≥–æ–¥–∏–Ω–∏ —Ä–æ–±–æ—Ç–∏"):
        text += f"‚è∞    **–ì–æ–¥–∏–Ω–∏ —Ä–æ–±–æ—Ç–∏:** {item_data['–≥–æ–¥–∏–Ω–∏ —Ä–æ–±–æ—Ç–∏']}\n"
    if item_data.get("—Ç–µ–ª–µ—Ñ–æ–Ω"):
        text += f"üìû **–¢–µ–ª–µ—Ñ–æ–Ω:** {item_data['—Ç–µ–ª–µ—Ñ–æ–Ω']}\n"
    keyboard_rows = []
    if item_data.get("map_url"):
        keyboard_rows.append([InlineKeyboardButton("üìç –ü–æ–∫–∞–∑–∞—Ç–∏ –Ω–∞ –∫–∞—Ä—Ç—ñ", url=item_data["map_url"])])
    keyboard_rows.append([InlineKeyboardButton("üîô –ù–∞–∑–∞–¥", callback_data=f"dir_cat:{category_name}")])
    reply_markup = InlineKeyboardMarkup(keyboard_rows)
    await query.edit_message_text(text, parse_mode=ParseMode.MARKDOWN, reply_markup=reply_markup)
async def main_menu_from_callback(update: Update, context: CallbackContext) -> None:
    """–û–±—Ä–æ–±–Ω–∏–∫ –¥–ª—è –ø–æ–≤–µ—Ä–Ω–µ–Ω–Ω—è –≤ –≥–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é."""
    query = update.callback_query
    await query.answer()
    keyboard = ReplyKeyboardMarkup(
        [['üì¢ –¢—Ä–∏–≤–æ–≥–∏', 'üí∞ –ö—É—Ä—Å –≤–∞–ª—é—Ç'],
         ['üìù –ü–µ—Ä–µ–≥–ª—è–Ω—É—Ç–∏ –æ–≥–æ–ª–æ—à–µ–Ω–Ω—è', 'üìù –î–æ–¥–∞—Ç–∏ –æ–≥–æ–ª–æ—à–µ–Ω–Ω—è'],
         ["‚úçÔ∏è –ó–≤–æ—Ä–æ—Ç–Ω–∏–π –∑–≤'—è–∑–æ–∫", "üó∫Ô∏è –î–æ–≤—ñ–¥–Ω–∏–∫"]],
        resize_keyboard=True
    )
    await query.edit_message_text("–í–∏ –ø–æ–≤–µ—Ä–Ω—É–ª–∏—Å—å –¥–æ –≥–æ–ª–æ–≤–Ω–æ–≥–æ –º–µ–Ω—é")
